import React, { useState, useMemo } from 'react';
import Button from './Button';

const DataTable = ({ data, rowsPerPage = 5 }) => {
  const [currentPage, setCurrentPage] = useState(1);

  const { paginatedData, totalPages, headers } = useMemo(() => {
    if (!data || data.length === 0) {
      return { paginatedData: [], totalPages: 1, headers: [] };
    }

    const headers = Object.keys(data[0]);
    const totalPages = Math.ceil(data.length / rowsPerPage);
    const paginatedData = data.slice(
      (currentPage - 1) * rowsPerPage,
      currentPage * rowsPerPage
    );
    return { paginatedData, totalPages, headers };
  }, [data, currentPage, rowsPerPage]);

  if (!data || data.length === 0) {
    return <p className="text-gray-400 text-center py-4">No data to display.</p>;
  }

  const handleNext = () => {
    setCurrentPage((prev) => Math.min(prev + 1, totalPages));
  };

  const handlePrev = () => {
    setCurrentPage((prev) => Math.max(prev - 1, 1));
  };

  return (
    <div>
      <div className="overflow-x-auto rounded-lg border border-gray-700">
        <table className="min-w-full divide-y divide-gray-700">
          <thead className="bg-gray-800">
            <tr>
              {headers.map((header) => (
                <th key={header} scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                  {header.replace(/_/g, ' ')}
                </th>
              ))}
            </tr>
          </thead>
          <tbody className="bg-gray-800/50 divide-y divide-gray-700">
            {paginatedData.map((row, rowIndex) => (
              <tr key={rowIndex} className="hover:bg-gray-700/50 transition-colors">
                {headers.map((header) => (
                  <td key={header} className="px-6 py-4 whitespace-nowrap text-sm text-gray-200">
                    {row[header]}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      <div className="flex items-center justify-between mt-4">
        <Button onClick={handlePrev} disabled={currentPage === 1} variant="secondary">
          Previous
        </Button>
        <span className="text-sm text-gray-400">
          Page {currentPage} of {totalPages}
        </span>
        <Button onClick={handleNext} disabled={currentPage === totalPages} variant="secondary">
          Next
        </Button>
      </div>
    </div>
  );
};

export default DataTable;
