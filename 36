import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { blogPosts } from '../data/blogPosts';
import { ArrowLeft, Calendar, User } from 'lucide-react';

const ContentRenderer = ({ content }) => {
  switch (content.type) {
    case 'heading':
      const Tag = `h${content.level}`;
      return <Tag className="text-2xl font-bold text-white mt-8 mb-4">{content.text}</Tag>;
    case 'paragraph':
      return <p className="text-gray-300 leading-relaxed mb-4">{content.text}</p>;
    case 'formula':
      return (
        <div className="bg-gray-900 border border-gray-700 rounded-lg p-4 my-6 text-center">
          <code className="text-cyan-300 text-lg font-mono">{content.text}</code>
        </div>
      );
    case 'code':
        return (
            <pre className="bg-gray-900 border border-gray-700 rounded-lg p-4 my-6 overflow-x-auto">
                <code className={`language-${content.language} text-sm text-gray-200`}>{content.code}</code>
            </pre>
        );
    case 'list':
        return (
            <ul className="list-disc list-inside space-y-2 my-4 text-gray-300">
                {content.items.map((item, index) => (
                    <li key={index} dangerouslySetInnerHTML={{ __html: item }}></li>
                ))}
            </ul>
        );
    case 'table':
        return (
            <div className="my-6 overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-700 border border-gray-700">
                    <thead className="bg-gray-800">
                        <tr>
                            {content.headers.map(header => <th key={header} className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">{header}</th>)}
                        </tr>
                    </thead>
                    <tbody className="bg-gray-800/50 divide-y divide-gray-700">
                        {content.rows.map((row, rowIndex) => (
                            <tr key={rowIndex}>
                                {row.map((cell, cellIndex) => <td key={cellIndex} className="px-6 py-4 whitespace-nowrap text-sm text-gray-200">{cell}</td>)}
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        );
    default:
      return null;
  }
};

const BlogPostPage = () => {
  const { slug } = useParams();
  const post = blogPosts.find(p => p.slug === slug);

  if (!post) {
    return (
      <div className="text-center text-gray-400">
        <h1 className="text-2xl text-white">404 - Artikel tidak ditemukan</h1>
        <Link to="/dashboard/blog" className="text-cyan-400 hover:underline mt-4 inline-block">Kembali ke Blog</Link>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
      <Link to="/dashboard/blog" className="inline-flex items-center text-cyan-400 hover:text-cyan-300 mb-8">
        <ArrowLeft className="mr-2 h-4 w-4" />
        Kembali ke Semua Artikel
      </Link>

      <article>
        <h1 className="text-4xl md:text-5xl font-extrabold text-white mb-4">{post.title}</h1>
        <div className="flex items-center space-x-4 text-gray-400 mb-6">
          <div className="flex items-center space-x-2">
            <User className="h-4 w-4" />
            <span>{post.author}</span>
          </div>
          <div className="flex items-center space-x-2">
            <Calendar className="h-4 w-4" />
            <span>{post.date}</span>
          </div>
        </div>
        <img src={post.coverImage} alt={post.title} className="w-full h-auto max-h-96 object-cover rounded-xl mb-8" />
        
        <div className="prose prose-invert max-w-none">
            {post.content.map((block, index) => (
                <ContentRenderer key={index} content={block} />
            ))}
        </div>
      </article>
    </div>
  );
};

export default BlogPostPage;
