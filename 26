export const algorithms = [
  // Supervised Learning
  {
    name: "Linear Regression",
    type: "Supervised",
    description: "Memprediksi nilai kontinu dengan menyesuaikan persamaan linier dengan data yang diamati.",
    parameters: [
      { name: 'fit_intercept', label: 'Sesuaikan Intersep', type: 'boolean', defaultValue: true },
    ],
  },
  {
    name: "Logistic Regression",
    type: "Supervised",
    description: "Algoritma klasifikasi yang digunakan untuk memprediksi hasil biner (misalnya, ya/tidak, benar/salah).",
    parameters: [
      { name: 'C', label: 'Regularisasi (C)', type: 'number', defaultValue: 1.0, step: 0.1 },
      { name: 'solver', label: 'Solver', type: 'select', options: ['lbfgs', 'liblinear', 'sag', 'saga'], defaultValue: 'lbfgs' },
    ],
  },
  {
    name: "K-Nearest Neighbors",
    type: "Supervised",
    description: "Mengklasifikasikan titik data berdasarkan kelas mayoritas dari 'k' tetangga terdekatnya.",
    parameters: [
      { name: 'n_neighbors', label: 'Jumlah Tetangga (k)', type: 'number', defaultValue: 5, step: 1 },
      { name: 'weights', label: 'Fungsi Bobot', type: 'select', options: ['uniform', 'distance'], defaultValue: 'uniform' },
    ],
  },
  {
    name: "Decision Tree",
    type: "Supervised",
    description: "Model keputusan seperti pohon dan kemungkinan konsekuensinya, digunakan untuk klasifikasi dan regresi.",
    parameters: [
      { name: 'criterion', label: 'Kriteria', type: 'select', options: ['gini', 'entropy'], defaultValue: 'gini' },
      { name: 'max_depth', label: 'Kedalaman Maks', type: 'number', defaultValue: null, placeholder: 'None' },
    ],
  },
  {
    name: "Random Forest",
    type: "Supervised",
    description: "Metode ansambel yang memasang sejumlah pengklasifikasi pohon keputusan pada berbagai sub-sampel dari dataset.",
    parameters: [
      { name: 'n_estimators', label: 'Jumlah Estimator', type: 'number', defaultValue: 100, step: 10 },
      { name: 'max_depth', label: 'Kedalaman Maks', type: 'number', defaultValue: null, placeholder: 'None' },
      { name: 'criterion', label: 'Kriteria', type: 'select', options: ['gini', 'entropy'], defaultValue: 'gini' },
    ],
  },

  // Unsupervised Learning
  {
    name: "K-Means Clustering",
    type: "Unsupervised",
    description: "Membagi n observasi menjadi k kluster di mana setiap observasi milik kluster dengan mean terdekat.",
    parameters: [
      { name: 'n_clusters', label: 'Jumlah Kluster (k)', type: 'number', defaultValue: 3, step: 1 },
      { name: 'init', label: 'Metode Inisialisasi', type: 'select', options: ['k-means++', 'random'], defaultValue: 'k-means++' },
      { name: 'n_init', label: 'Jumlah Inisialisasi', type: 'number', defaultValue: 10, step: 1 },
    ],
  },
  {
    name: "Hierarchical Clustering",
    type: "Unsupervised",
    description: "Membangun hierarki kluster, baik aglomeratif (bottom-up) maupun divisif (top-down).",
    parameters: [
      { name: 'n_clusters', label: 'Jumlah Kluster', type: 'number', defaultValue: 2, step: 1 },
      { name: 'linkage', label: 'Kriteria Keterkaitan', type: 'select', options: ['ward', 'complete', 'average', 'single'], defaultValue: 'ward' },
    ],
  },
  {
    name: "Association Rule Mining",
    type: "Unsupervised",
    description: "Menemukan hubungan menarik antara variabel dalam database besar (misalnya, analisis keranjang pasar).",
    parameters: [
      { name: 'min_support', label: 'Dukungan Minimum', type: 'number', defaultValue: 0.5, step: 0.05 },
      { name: 'min_confidence', label: 'Kepercayaan Minimum', type: 'number', defaultValue: 0.7, step: 0.05 },
    ],
  },
];
